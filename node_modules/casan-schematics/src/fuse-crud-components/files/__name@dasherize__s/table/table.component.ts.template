import { CommonModule } from '@angular/common';
import {
    Component,
    EventEmitter,
    Input,
    OnChanges,
    Output,
    QueryList,
    SimpleChanges,
    ViewChildren,
} from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { MatIcon } from '@angular/material/icon';
import { MatMenuModule } from '@angular/material/menu';
import { MatPaginatorModule, PageEvent } from '@angular/material/paginator';
import { MatSelect, MatSelectModule } from '@angular/material/select';
import { MatTableModule } from '@angular/material/table';
import { FuseConfirmationService } from '@fuse/services/confirmation';
import { <%= classify(name) %> } from 'app/core/<%= dasherize(name) %>/<%= dasherize(name) %>.type';
import { Update<%= classify(name) %>Dto } from 'app/core/<%= dasherize(name) %>/dto/update-<%= dasherize(name) %>.dto';
import { PageResponse } from 'app/core/base/pageResponse.types';

@Component({
    selector: 'app-table-<%= dasherize(name) %>',
    standalone: true,
    imports: [
        CommonModule,
        MatTableModule,
        MatPaginatorModule,
        MatButtonModule,
        MatIcon,
        MatMenuModule,
        MatSelectModule,
    ],
    templateUrl: './table.component.html',
    styleUrl: './table.component.scss',
})
export class Table<%= classify(name) %>Component implements OnChanges {
    @ViewChildren('selectStatus') selectStatues: QueryList<MatSelect>;

    @Input() <%= dasherize(name) %>Resp: PageResponse<<%= classify(name) %>[]>;
    @Output() delete: EventEmitter<<%= classify(name) %>> = new EventEmitter<<%= classify(name) %>>(null);
    @Output() edit: EventEmitter<<%= classify(name) %>> = new EventEmitter<<%= classify(name) %>>(null);
    @Output() updateStatus: EventEmitter<{id: string, body: Update<%= classify(name) %>Dto}> = new EventEmitter<{id: string, body: Update<%= classify(name) %>Dto}>(null);
    @Output() changePage: EventEmitter<PageEvent> = new EventEmitter<PageEvent>(
        null
    );

    displayedColumns: string[] = [
        'id',
        'name',
        'edit'
    ];
    dataSource: <%= classify(name) %>[] = [];

    constructor(
        private _fuseConfirmationService: FuseConfirmationService,
    ) {}

    ngOnChanges(changes: SimpleChanges): void {
        this.dataSource = this.<%= dasherize(name) %>Resp.items;
    }

    onChangePage(event: PageEvent) {
        event.pageIndex = event.pageIndex + 1;
        this.changePage.emit(event);
    }
}
