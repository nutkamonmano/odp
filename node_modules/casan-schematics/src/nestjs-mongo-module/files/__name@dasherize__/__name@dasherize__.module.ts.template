import { Module } from '@nestjs/common';
import { CqrsModule } from '@nestjs/cqrs';
import { Reflector } from '@nestjs/core';
import { RolesAndScopesGuard } from 'src/common/presentation/guards/roles-and-scopes.guard';
import { <%= classify(name) %>Controller } from './presentation/controllers/<%= dasherize(name) %>.controller';
import { Create<%= classify(name) %>Handler } from './application/commands/create-<%= dasherize(name) %>.handler';
import { Update<%= classify(name) %>Handler } from './application/commands/update-<%= dasherize(name) %>.handler';
import { Delete<%= classify(name) %>Handler } from './application/commands/delete-<%= dasherize(name) %>.handler';
import { GetAll<%= classify(name) %>sHandler } from './application/queries/get-all-<%= dasherize(name) %>s.handler';
import { Get<%= classify(name) %>ByIdHandler } from './application/queries/get-<%= dasherize(name) %>-by-id.handler';
import { <%= classify(name) %>Repository } from './infrastructure/repositories/<%= dasherize(name) %>.repository';
import { MongooseModule } from '@nestjs/mongoose';
import { <%= classify(name) %>Schema } from './infrastructure/persistence/<%= dasherize(name) %>.schema';

@Module({
  imports: [
    CqrsModule,
    MongooseModule.forFeature([{ name: '<%= classify(name) %>', schema: <%= classify(name) %>Schema }])
  ],
  controllers: [<%= classify(name) %>Controller],
  providers: [
    Reflector,
    RolesAndScopesGuard,
    Create<%= classify(name) %>Handler,
    Update<%= classify(name) %>Handler,
    Delete<%= classify(name) %>Handler,
    GetAll<%= classify(name) %>sHandler,
    Get<%= classify(name) %>ByIdHandler,
    {
      provide: '<%= classify(name) %>Repository',
      useClass: <%= classify(name) %>Repository,
    },
  ],
})
export class <%= classify(name) %>Module {}
