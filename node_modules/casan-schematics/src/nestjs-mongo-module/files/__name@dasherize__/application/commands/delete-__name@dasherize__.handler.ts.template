import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';
import { Delete<%= classify(name) %>Command } from './delete-<%= dasherize(name) %>.command';
import { <%= classify(name) %>RepositoryInterface } from '../../domain/repositories/<%= dasherize(name) %>.repository.interface';
import { Inject, NotFoundException } from '@nestjs/common';

@CommandHandler(Delete<%= classify(name) %>Command)
export class Delete<%= classify(name) %>Handler
  implements ICommandHandler<Delete<%= classify(name) %>Command>
{
  constructor(
    @Inject('<%= classify(name) %>Repository')
    private readonly <%= dasherize(name) %>Repository: <%= classify(name) %>RepositoryInterface,
  ) {}

  async execute(command: Delete<%= classify(name) %>Command): Promise<void> {
    const { id } = command;

    // ตรวจสอบว่าผู้สมัครที่ต้องการลบมีอยู่ในระบบหรือไม่
    const <%= dasherize(name) %> = await this.<%= dasherize(name) %>Repository.findById(id);
    if (!<%= dasherize(name) %>) {
      throw new NotFoundException(`<%= classify(name) %> with ID ${id} not found`);
    }

    // ลบผู้สมัคร
    await this.<%= dasherize(name) %>Repository.delete(id);
  }
}
